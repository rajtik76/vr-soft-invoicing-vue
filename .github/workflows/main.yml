# This is a basic workflow to help you get started with Actions

name: Compose + npm run prod + deploy to production server over FTP

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
    - name: ðŸ‘€ Get latest code
      uses: actions/checkout@v3
      
    - name: ðŸ‘€ Setup PHP Action
      uses: shivammathur/setup-php@2.25.1
      with:
        php-version: '8.2'
        
    - name: ðŸ‘€ Composer cache
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
        
    - name: ðŸ‘€ Composer install
      run: |
        rm -rf vendor
        composer install
        
    - name: ðŸ‘€ Copy .env
      run: cp .env.example .env
      
    - name: ðŸ‘€ Create app key
      run: php artisan key:generate
      
    - name: ðŸ‘€ Node setup
      uses: actions/setup-node@v3
      with:
        node-version: 'latest'
        cache: 'npm'
    - run: npm install
    - run: npm run build
    
    - name: Run PHPUnit test
      run:  php artisan test
    
    - name: Cache cleanup
      run: rm -r storage/framework/cache
      
    - name: ðŸ‘Ÿ Sync files
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_SERVER_URL }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        protocol: ftps
        exclude: | 
          **/vendor/**
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.env
          **/DOCKER_ENV
          **/docker_tag
          **/output.log
  
  # This workflow contains a single job called "build"
  #build:
    # The type of runner that the job will run on
    #runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    #steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Run a one-line script
        #run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
        #run: |
          #echo Add other actions to build,
          #echo test, and deploy your project.
